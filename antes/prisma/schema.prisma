// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// prisma migrate: npx prisma migrate dev --name init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model user {
  id               Int           @id @default(autoincrement())
  role_id          Int
  first_name       String        @db.VarChar(50)
  last_name        String        @db.VarChar(50)
  user_function_id Int
  bio              String        @db.Text
  email            String        @db.VarChar(255)
  password         String        @db.VarChar(32) // assuming hash format
  user_function    user_function @relation(fields: [user_function_id], references: [id])
  role             role          @relation(fields: [role_id], references: [id])
  calendars        calendar[]
  qa_questions     qa_question[]
  qa_answers       qa_answer[]
  user_lessons     user_lesson[]
}

model role {
  id    Int    @id @default(autoincrement())
  level Int
  name  String @db.VarChar(50)
  users user[]
}

model user_function {
  id    Int    @id @default(autoincrement())
  name  String @db.VarChar(50)
  users user[]
}

model event {
  id          Int        @id @default(autoincrement())
  title       String     @db.VarChar(50)
  description String     @db.VarChar(50)
  start       DateTime
  end         DateTime
  calendars   calendar[]
}

model calendar {
  id       Int   @id @default(autoincrement())
  user_id  Int
  event_id Int
  user     user  @relation(fields: [user_id], references: [id])
  event    event @relation(fields: [event_id], references: [id])
}

model tag {
  id      Int      @id @default(autoincrement())
  name    String   @db.VarChar(50)
  qa_tags qa_tag[]
}

model qa_tag {
  id             Int         @id @default(autoincrement())
  qa_question_id Int
  tag_id         Int
  qa_question    qa_question @relation(fields: [qa_question_id], references: [id])
  tag            tag         @relation(fields: [tag_id], references: [id])
}

model qa_question {
  id          Int         @id @default(autoincrement())
  user_id     Int
  question    String      @db.Text
  date_create DateTime
  user        user        @relation(fields: [user_id], references: [id])
  qa_answers  qa_answer[]
  qa_tags     qa_tag[]
}

model qa_answer {
  id          Int         @id @default(autoincrement())
  question_id Int
  user_id     Int
  answer      String      @db.Text
  date_create DateTime
  qa_question qa_question @relation(fields: [question_id], references: [id])
  user        user        @relation(fields: [user_id], references: [id])
}

model subject {
  id          Int      @id @default(autoincrement())
  name        String   @db.VarChar(50)
  description String   @db.VarChar(50)
  lessons     lesson[]
}

model lesson {
  id           Int           @id @default(autoincrement())
  subject_id   Int
  quiz_id      Int
  order        Int
  title        String        @db.VarChar(50)
  description  String        @db.VarChar(50)
  time         DateTime
  lesson_data  Json
  subject      subject       @relation(fields: [subject_id], references: [id])
  quiz         quiz          @relation(fields: [quiz_id], references: [id])
  user_lessons user_lesson[]
}

model quiz {
  id          Int      @id @default(autoincrement())
  title       String   @db.VarChar(50)
  description String   @db.VarChar(50)
  time        DateTime
  quiz_data   Json
  lessons     lesson[]
}

model user_lesson {
  id         Int      @id @default(autoincrement())
  user_id    Int
  lesson_id  Int
  time       DateTime
  completion Boolean
  results    Json
  user       user     @relation(fields: [user_id], references: [id])
  lesson     lesson   @relation(fields: [lesson_id], references: [id])
}
