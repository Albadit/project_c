// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// prisma migrate: npx prisma migrate dev --name init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int          @id @default(autoincrement())
  roleId         Int
  firstName      String       @db.Text
  lastName       String       @db.Text
  userFunctionId Int
  bio            String       @db.Text
  email          String       @db.VarChar(255)
  password       String       @db.VarChar(32) // assuming hash format
  role           Role         @relation(fields: [roleId], references: [id])
  userFunction   UserFunction @relation(fields: [userFunctionId], references: [id])
  calendars      Calendar[]
  qaQuestions    QaQuestion[]
  qaAnswers      QaAnswer[]
  userLessons    UserLesson[]
}

model Role {
  id    Int    @id @default(autoincrement())
  level Int
  name  String @db.Text
  users User[]
}

model UserFunction {
  id    Int    @id @default(autoincrement())
  name  String @db.Text
  users User[]
}

model Event {
  id          Int        @id @default(autoincrement())
  title       String     @db.Text
  description String     @db.Text
  start       DateTime
  end         DateTime
  calendars   Calendar[]
}

model Calendar {
  id      Int   @id @default(autoincrement())
  userId  Int
  eventId Int
  user    User  @relation(fields: [userId], references: [id])
  event   Event @relation(fields: [eventId], references: [id])
}

model Tag {
  id     Int     @id @default(autoincrement())
  name   String  @db.Text
  qaTags QaTag[]
}

model QaTag {
  id           Int        @id @default(autoincrement())
  qaQuestionId Int
  tagId        Int
  qaQuestion   QaQuestion @relation(fields: [qaQuestionId], references: [id])
  tag          Tag        @relation(fields: [tagId], references: [id])
}

model QaQuestion {
  id         Int        @id @default(autoincrement())
  userId     Int
  question   String     @db.Text
  dateCreate DateTime
  user       User       @relation(fields: [userId], references: [id])
  qaAnswers  QaAnswer[]
  qaTags     QaTag[]
}

model QaAnswer {
  id         Int        @id @default(autoincrement())
  questionId Int
  userId     Int
  answer     String     @db.Text
  dateCreate DateTime
  qaQuestion QaQuestion @relation(fields: [questionId], references: [id])
  user       User       @relation(fields: [userId], references: [id])
}

model Subject {
  id          Int      @id @default(autoincrement())
  name        String   @db.Text
  description String   @db.Text
  lessons     Lesson[]
}

model Lesson {
  id          Int          @id @default(autoincrement())
  subjectId   Int
  quizId      Int
  order       Int
  title       String       @db.Text
  description String       @db.Text
  lesson_data Json
  subject     Subject      @relation(fields: [subjectId], references: [id])
  quiz        Quiz         @relation(fields: [quizId], references: [id])
  userLessons UserLesson[]
}

model Quiz {
  id        Int      @id @default(autoincrement())
  quiz_data Json
  lessons   Lesson[]
}

model UserLesson {
  id         Int     @id @default(autoincrement())
  userId     Int
  lessonId   Int
  completion Boolean
  user       User    @relation(fields: [userId], references: [id])
  lesson     Lesson  @relation(fields: [lessonId], references: [id])
}
